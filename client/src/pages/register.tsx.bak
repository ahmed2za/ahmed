import { useState } from 'react';
import { useRouter } from 'next/router';
import { toast } from 'react-hot-toast';
import Link from 'next/link';
import Image from 'next/image';
import { Box, Container, TextField, Button, Typography, Paper, FormControl, InputLabel, Select, MenuItem, RadioGroup, FormControlLabel, Radio, Grid } from '@mui/material';
import { styled } from '@mui/material/styles';

const GenderOption = styled(FormControlLabel)(({ theme }) => ({
  flex: 1,
  margin: 0,
  border: `1px solid ${theme.palette.divider}`,
  borderRadius: theme.shape.borderRadius,
  padding: theme.spacing(2),
  transition: 'all 0.2s',
  '&:hover': {
    backgroundColor: theme.palette.action.hover,
  },
  '& .MuiFormControlLabel-label': {
    width: '100%',
    textAlign: 'center',
  },
}));

const StyledRadio = styled(Radio)(({ theme }) => ({
  display: 'none',
}));

export default function Register() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: '',
    role: 'USER',
    gender: 'male'
  });
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | { name?: string; value: unknown }>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name as string]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (formData.password !== formData.confirmPassword) {
      toast.error('كلمات المرور غير متطابقة');
      return;
    }

    setLoading(true);

    try {
      const avatar = formData.gender === 'male' ? '/images/avatars/male1.svg' : '/images/avatars/female1.svg';
      
      const response = await fetch('/api/auth/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name: formData.name,
          email: formData.email,
          password: formData.password,
          role: formData.role,
          gender: formData.gender,
          avatar: avatar
        }),
      });

      if (!response.ok) {
        const data = await response.json();
        throw new Error(data.message || 'حدث خطأ أثناء إنشاء الحساب');
      }

      const data = await response.json();
      
      // Save user data to localStorage
      localStorage.setItem('user', JSON.stringify({
        ...data.user,
        avatar
      }));

      toast.success('تم إنشاء الحساب بنجاح');
      router.push('/auth/login');
    } catch (error: any) {
      toast.error(error.message || 'حدث خطأ أثناء إنشاء الحساب');
    } finally {
      setLoading(false);
    }
  };

  return (
    <Container component="main" maxWidth="sm">
      <Box
        sx={{
          marginTop: 8,
          marginBottom: 8,
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
        }}
      >
        <Paper 
          elevation={3} 
          sx={{ 
            p: 4, 
            width: '100%',
            borderRadius: 2,
            background: 'linear-gradient(to bottom, #ffffff, #f5f5f5)'
          }}
        >
          <Typography 
            component="h1" 
            variant="h4" 
            align="center" 
            gutterBottom
            sx={{ 
              fontWeight: 'bold',
              color: '#1a237e',
              mb: 4
            }}
          >
            إنشاء حساب جديد
          </Typography>

          <Box component="form" onSubmit={handleSubmit} sx={{ mt: 1 }}>
            <Grid container spacing={3}>
              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  id="name"
                  label="الاسم"
                  name="name"
                  autoComplete="name"
                  value={formData.name}
                  onChange={handleChange}
                  dir="rtl"
                  variant="outlined"
                />
              </Grid>

              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  id="email"
                  label="البريد الإلكتروني"
                  name="email"
                  autoComplete="email"
                  value={formData.email}
                  onChange={handleChange}
                  dir="rtl"
                  variant="outlined"
                />
              </Grid>

              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  name="password"
                  label="كلمة المرور"
                  type="password"
                  id="password"
                  autoComplete="new-password"
                  value={formData.password}
                  onChange={handleChange}
                  dir="rtl"
                  variant="outlined"
                />
              </Grid>

              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  name="confirmPassword"
                  label="تأكيد كلمة المرور"
                  type="password"
                  id="confirmPassword"
                  autoComplete="new-password"
                  value={formData.confirmPassword}
                  onChange={handleChange}
                  dir="rtl"
                  variant="outlined"
                />
              </Grid>

              <Grid item xs={12}>
                <FormControl fullWidth variant="outlined">
                  <InputLabel id="role-label">نوع الحساب</InputLabel>
                  <Select
                    labelId="role-label"
                    id="role"
                    name="role"
                    value={formData.role}
                    onChange={handleChange}
                    label="نوع الحساب"
                  >
                    <MenuItem value="USER">مستخدم</MenuItem>
                    <MenuItem value="COMPANY">شركة</MenuItem>
                  </Select>
                </FormControl>
              </Grid>

              <Grid item xs={12}>
                <Typography 
                  variant="subtitle1" 
                  sx={{ 
                    mb: 2,
                    textAlign: 'center',
                    color: '#666'
                  }}
                >
                  اختر صورتك الشخصية
                </Typography>
                <Box sx={{ display: 'flex', gap: 2 }}>
                  <Box 
                    sx={{ 
                      flex: 1,
                      display: 'flex',
                      flexDirection: 'column',
                      alignItems: 'center',
                      gap: 2
                    }}
                  >
                    <Image
                      src="/images/avatars/male1.svg"
                      alt="Male Avatar"
                      width={80}
                      height={80}
                    />
                    <GenderOption
                      value="male"
                      control={<StyledRadio />}
                      label="ذكر"
                      checked={formData.gender === 'male'}
                      onChange={handleChange}
                      name="gender"
                      sx={{
                        backgroundColor: formData.gender === 'male' ? 'primary.light' : 'transparent',
                        color: formData.gender === 'male' ? 'primary.main' : 'inherit',
                      }}
                    />
                  </Box>
                  <Box 
                    sx={{ 
                      flex: 1,
                      display: 'flex',
                      flexDirection: 'column',
                      alignItems: 'center',
                      gap: 2
                    }}
                  >
                    <Image
                      src="/images/avatars/female1.svg"
                      alt="Female Avatar"
                      width={80}
                      height={80}
                    />
                    <GenderOption
                      value="female"
                      control={<StyledRadio />}
                      label="أنثى"
                      checked={formData.gender === 'female'}
                      onChange={handleChange}
                      name="gender"
                      sx={{
                        backgroundColor: formData.gender === 'female' ? 'primary.light' : 'transparent',
                        color: formData.gender === 'female' ? 'primary.main' : 'inherit',
                      }}
                    />
                  </Box>
                </Box>
              </Grid>

              <Grid item xs={12}>
                <Button
                  type="submit"
                  fullWidth
                  variant="contained"
                  size="large"
                  disabled={loading}
                  sx={{ 
                    mt: 2,
                    mb: 2,
                    height: 48,
                    fontSize: '1.1rem'
                  }}
                >
                  {loading ? 'جاري إنشاء الحساب...' : 'إنشاء حساب'}
                </Button>
              </Grid>
            </Grid>

            <Box sx={{ textAlign: 'center', mt: 2 }}>
              <Link 
                href="/auth/login"
                style={{
                  color: '#1a237e',
                  textDecoration: 'none',
                  fontWeight: 500
                }}
              >
                لديك حساب بالفعل؟ تسجيل الدخول
              </Link>
            </Box>
          </Box>
        </Paper>
      </Box>
    </Container>
  );
}
